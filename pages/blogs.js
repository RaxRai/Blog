
import Head from 'next/head'
import Image from 'next/image'
import { Inter } from 'next/font/google'
import styles from '@/styles/Home.module.css'
import { useRef } from 'react'
import { PrismaClient } from '@prisma/client'

import Box from '@mui/material/Box';
import Card from '@mui/material/Card';
import CardActions from '@mui/material/CardActions';
import CardContent from '@mui/material/CardContent';
import Button from '@mui/material/Button';
import Typography from '@mui/material/Typography';
import Paper from '@mui/material/Paper';
import Grid from '@mui/material/Grid';

import axios from 'axios'

const inter = Inter({ subsets: ['latin'] })


export default function Blogs({ data, single }) {
    const parsedData = JSON.parse(data)

    function replaceWithBr(string) {
        return string.replace(/\n/g, "<br />")
    }

    return (
        <>
            <Head>
                <title>Create Next App</title>
                <meta name="description" content="Generated by create next app" />
                <meta name="viewport" content="width=device-width, initial-scale=1" />
                <link rel="icon" href="/favicon.ico" />
            </Head>
            <main style={{ backgroundColor: 'grey', minHeight: '100vh', padding: 10 }}>
                <Box sx={{ flexGrow: 1 }}>
                    <Grid container spacing={0.5} justifyContent="center" alignItems={"stretch"}>
                        {single && <Grid key={parsedData.id} item xs={12} >
                                <Card  sx={{ minWidth: 275, height: "100%", display: 'flex', flexDirection: 'column', justifyContent: 'space-between' }}>
                                    <CardContent >
                                        <Typography variant="h6" component="div">
                                            Blog ID: {parsedData.id}
                                        </Typography>
                                        <Typography variant="h5" component="div">
                                            {parsedData.title}
                                        </Typography>
                                        <Typography sx={{ mb: 1.5 }} color="text.secondary">
                                            {parsedData.type}
                                        </Typography>
                                        <Typography variant="body2" sx={{ textAlign: 'justify' }}>
                                            <span dangerouslySetInnerHTML={{ __html: replaceWithBr(parsedData.content) }}>
                                            </span>
                                        </Typography>
                                    </CardContent>
                                    <CardActions >
                                        <Button size="small" onClick={()=> window.open("http://localhost:3000/blogs?id=" + parsedData.id, "_blank")}>share</Button>
                                    </CardActions>
                                </Card>
                            </Grid>}
                        {!single && parsedData.map((blog) =>
                            <Grid key={blog.id} item xs={10} sm={6} lg={4} xl={3} >
                                <Card  sx={{ minWidth: 275, height: "100%", display: 'flex', flexDirection: 'column', justifyContent: 'space-between' }}>
                                    <CardContent >
                                        <Typography variant="h6" component="div">
                                            Blog ID: {blog.id}
                                        </Typography>
                                        <Typography variant="h5" component="div">
                                            {blog.title}
                                        </Typography>
                                        <Typography sx={{ mb: 1.5 }} color="text.secondary">
                                            {blog.type}
                                        </Typography>
                                        <Typography variant="body2" sx={{ textAlign: 'justify' }}>
                                            <span dangerouslySetInnerHTML={{ __html: replaceWithBr(blog.content) }}>
                                            </span>
                                        </Typography>
                                    </CardContent>
                                    <CardActions >
                                    <Button size="small" onClick={()=> window.open("http://localhost:3000/blogs?id=" + blog.id, "_blank")}>share</Button>
                                    </CardActions>
                                </Card>
                            </Grid>
                        )}
                    </Grid>
                </Box>

            </main>
        </>
    )
}

export async function getServerSideProps(contexts) {
    const prisma = new PrismaClient()

    let result = []

    if(contexts.query.id){
        const id = Number(contexts.query.id)
        result = await prisma.blogs.findUnique({
            where: {
              id
            },
          })
    } else {
        const size = Number(contexts.query.size) || 5
        const page = size * Number(contexts.query.page) || 0
    
        result = await prisma.blogs.findMany({
            take: size,
            skip: page,
            orderBy: {
                id: 'desc',
            },
        })

    }

    await prisma.$disconnect()
    return { props: { data: JSON.stringify(result), single: !!contexts.query.id } }
}
